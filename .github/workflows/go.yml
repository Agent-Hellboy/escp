name: Release escp Binary

on:
  # Run tests on every push, pull request, and release event
  push:
  pull_request:
  release:
    types:
      - published  # This will trigger when a release is published

jobs:

  # Test job to run tests and upload coverage to Codecov
  test:
    name: Test and Upload Coverage
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      # Run the tests with coverage for the escp project
      - name: Run tests with coverage
        run: |
          go test -v -coverprofile=coverage.tmp ./...
          cat coverage.tmp | grep -v "_test\.go" > coverage.txt
          rm coverage.tmp

      # Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.txt
          flags: unittests
          fail_ci_if_error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Release job to build the binary and upload to GitHub
  release:
    name: Build and Release escp
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'  # Run only on release

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      # Build the binary
      - name: Build escp binary
        run: go build -o escp

      # Debug step: Print the current directory structure
      - name: List directory structure after build
        run: ls -R

      # Prepare dist directory and move binary
      - name: Prepare dist directory
        run: |
          mkdir -p dist
          mv escp dist/

      # Debug step: Print directory structure after moving binary to dist/
      - name: List directory structure after moving binary
        run: ls -R dist

      # Upload files to a GitHub release
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}  # Use default GitHub token
          file: dist/escp  # The binary file to upload
          asset_name: escp  # Name of the asset in the release
          tag: ${{ github.event.release.tag_name }}  # Use the tag associated with the release
